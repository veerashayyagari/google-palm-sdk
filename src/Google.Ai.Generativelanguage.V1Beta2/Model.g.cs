// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ai/generativelanguage/v1beta2/model.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ai.Generativelanguage.V1Beta2 {

  /// <summary>Holder for reflection information generated from google/ai/generativelanguage/v1beta2/model.proto</summary>
  public static partial class ModelReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ai/generativelanguage/v1beta2/model.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBnb29nbGUvYWkvZ2VuZXJhdGl2ZWxhbmd1YWdlL3YxYmV0YTIvbW9kZWwu",
            "cHJvdG8SJGdvb2dsZS5haS5nZW5lcmF0aXZlbGFuZ3VhZ2UudjFiZXRhMhof",
            "Z29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9y",
            "ZXNvdXJjZS5wcm90byL4AgoFTW9kZWwSEQoEbmFtZRgBIAEoCUID4EECEhoK",
            "DWJhc2VfbW9kZWxfaWQYAiABKAlCA+BBAhIUCgd2ZXJzaW9uGAMgASgJQgPg",
            "QQISFAoMZGlzcGxheV9uYW1lGAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJ",
            "EhkKEWlucHV0X3Rva2VuX2xpbWl0GAYgASgFEhoKEm91dHB1dF90b2tlbl9s",
            "aW1pdBgHIAEoBRIkChxzdXBwb3J0ZWRfZ2VuZXJhdGlvbl9tZXRob2RzGAgg",
            "AygJEhgKC3RlbXBlcmF0dXJlGAkgASgCSACIAQESEgoFdG9wX3AYCiABKAJI",
            "AYgBARISCgV0b3BfaxgLIAEoBUgCiAEBOjzqQTkKJ2dlbmVyYXRpdmVsYW5n",
            "dWFnZS5nb29nbGVhcGlzLmNvbS9Nb2RlbBIObW9kZWxzL3ttb2RlbH1CDgoM",
            "X3RlbXBlcmF0dXJlQggKBl90b3BfcEIICgZfdG9wX2tCkAEKKGNvbS5nb29n",
            "bGUuYWkuZ2VuZXJhdGl2ZWxhbmd1YWdlLnYxYmV0YTJCCk1vZGVsUHJvdG9Q",
            "AVpWZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9haS9n",
            "ZW5lcmF0aXZlbGFuZ3VhZ2UvdjFiZXRhMjtnZW5lcmF0aXZlbGFuZ3VhZ2Vi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ai.Generativelanguage.V1Beta2.Model), global::Google.Ai.Generativelanguage.V1Beta2.Model.Parser, new[]{ "Name", "BaseModelId", "Version", "DisplayName", "Description", "InputTokenLimit", "OutputTokenLimit", "SupportedGenerationMethods", "Temperature", "TopP", "TopK" }, new[]{ "Temperature", "TopP", "TopK" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Information about a Generative Language Model.
  /// </summary>
  public sealed partial class Model : pb::IMessage<Model>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Model> _parser = new pb::MessageParser<Model>(() => new Model());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Model> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ai.Generativelanguage.V1Beta2.ModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Model() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Model(Model other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      baseModelId_ = other.baseModelId_;
      version_ = other.version_;
      displayName_ = other.displayName_;
      description_ = other.description_;
      inputTokenLimit_ = other.inputTokenLimit_;
      outputTokenLimit_ = other.outputTokenLimit_;
      supportedGenerationMethods_ = other.supportedGenerationMethods_.Clone();
      temperature_ = other.temperature_;
      topP_ = other.topP_;
      topK_ = other.topK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Model Clone() {
      return new Model(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name of the `Model`.
    ///
    /// Format: `models/{model}` with a `{model}` naming convention of:
    ///
    /// * "{base_model_id}-{version}"
    ///
    /// Examples:
    ///
    /// * `models/chat-bison-001`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base_model_id" field.</summary>
    public const int BaseModelIdFieldNumber = 2;
    private string baseModelId_ = "";
    /// <summary>
    /// Required. The name of the base model, pass this to the generation request.
    ///
    /// Examples:
    ///
    /// * `chat-bison`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseModelId {
      get { return baseModelId_; }
      set {
        baseModelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private string version_ = "";
    /// <summary>
    /// Required. The version number of the model.
    ///
    /// This represents the major version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    /// <summary>
    /// The human-readable name of the model. E.g. "Chat Bison".
    ///
    /// The name can be up to 128 characters long and can consist of any UTF-8
    /// characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// A short description of the model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input_token_limit" field.</summary>
    public const int InputTokenLimitFieldNumber = 6;
    private int inputTokenLimit_;
    /// <summary>
    /// Maximum number of input tokens allowed for this model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InputTokenLimit {
      get { return inputTokenLimit_; }
      set {
        inputTokenLimit_ = value;
      }
    }

    /// <summary>Field number for the "output_token_limit" field.</summary>
    public const int OutputTokenLimitFieldNumber = 7;
    private int outputTokenLimit_;
    /// <summary>
    /// Maximum number of output tokens available for this model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OutputTokenLimit {
      get { return outputTokenLimit_; }
      set {
        outputTokenLimit_ = value;
      }
    }

    /// <summary>Field number for the "supported_generation_methods" field.</summary>
    public const int SupportedGenerationMethodsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_supportedGenerationMethods_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> supportedGenerationMethods_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The model's supported generation methods.
    ///
    /// The method names are defined as Pascal case
    /// strings, such as `generateMessage` which correspond to API methods.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> SupportedGenerationMethods {
      get { return supportedGenerationMethods_; }
    }

    /// <summary>Field number for the "temperature" field.</summary>
    public const int TemperatureFieldNumber = 9;
    private float temperature_;
    /// <summary>
    /// Controls the randomness of the output.
    ///
    /// Values can range over `[0.0,1.0]`, inclusive. A value closer to `1.0` will
    /// produce responses that are more varied, while a value closer to `0.0` will
    /// typically result in less surprising responses from the model.
    /// This value specifies default to be used by the backend while making the
    /// call to the model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Temperature {
      get { if ((_hasBits0 & 1) != 0) { return temperature_; } else { return 0F; } }
      set {
        _hasBits0 |= 1;
        temperature_ = value;
      }
    }
    /// <summary>Gets whether the "temperature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTemperature {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "temperature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTemperature() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "top_p" field.</summary>
    public const int TopPFieldNumber = 10;
    private float topP_;
    /// <summary>
    /// For Nucleus sampling.
    ///
    /// Nucleus sampling considers the smallest set of tokens whose probability
    /// sum is at least `top_p`.
    /// This value specifies default to be used by the backend while making the
    /// call to the model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TopP {
      get { if ((_hasBits0 & 2) != 0) { return topP_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        topP_ = value;
      }
    }
    /// <summary>Gets whether the "top_p" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTopP {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "top_p" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTopP() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "top_k" field.</summary>
    public const int TopKFieldNumber = 11;
    private int topK_;
    /// <summary>
    /// For Top-k sampling.
    ///
    /// Top-k sampling considers the set of `top_k` most probable tokens.
    /// This value specifies default to be used by the backend while making the
    /// call to the model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TopK {
      get { if ((_hasBits0 & 4) != 0) { return topK_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        topK_ = value;
      }
    }
    /// <summary>Gets whether the "top_k" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTopK {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "top_k" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTopK() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Model);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Model other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (BaseModelId != other.BaseModelId) return false;
      if (Version != other.Version) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Description != other.Description) return false;
      if (InputTokenLimit != other.InputTokenLimit) return false;
      if (OutputTokenLimit != other.OutputTokenLimit) return false;
      if(!supportedGenerationMethods_.Equals(other.supportedGenerationMethods_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Temperature, other.Temperature)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TopP, other.TopP)) return false;
      if (TopK != other.TopK) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (BaseModelId.Length != 0) hash ^= BaseModelId.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (InputTokenLimit != 0) hash ^= InputTokenLimit.GetHashCode();
      if (OutputTokenLimit != 0) hash ^= OutputTokenLimit.GetHashCode();
      hash ^= supportedGenerationMethods_.GetHashCode();
      if (HasTemperature) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Temperature);
      if (HasTopP) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TopP);
      if (HasTopK) hash ^= TopK.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (BaseModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BaseModelId);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (InputTokenLimit != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(InputTokenLimit);
      }
      if (OutputTokenLimit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OutputTokenLimit);
      }
      supportedGenerationMethods_.WriteTo(output, _repeated_supportedGenerationMethods_codec);
      if (HasTemperature) {
        output.WriteRawTag(77);
        output.WriteFloat(Temperature);
      }
      if (HasTopP) {
        output.WriteRawTag(85);
        output.WriteFloat(TopP);
      }
      if (HasTopK) {
        output.WriteRawTag(88);
        output.WriteInt32(TopK);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (BaseModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BaseModelId);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (InputTokenLimit != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(InputTokenLimit);
      }
      if (OutputTokenLimit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OutputTokenLimit);
      }
      supportedGenerationMethods_.WriteTo(ref output, _repeated_supportedGenerationMethods_codec);
      if (HasTemperature) {
        output.WriteRawTag(77);
        output.WriteFloat(Temperature);
      }
      if (HasTopP) {
        output.WriteRawTag(85);
        output.WriteFloat(TopP);
      }
      if (HasTopK) {
        output.WriteRawTag(88);
        output.WriteInt32(TopK);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (BaseModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseModelId);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (InputTokenLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputTokenLimit);
      }
      if (OutputTokenLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputTokenLimit);
      }
      size += supportedGenerationMethods_.CalculateSize(_repeated_supportedGenerationMethods_codec);
      if (HasTemperature) {
        size += 1 + 4;
      }
      if (HasTopP) {
        size += 1 + 4;
      }
      if (HasTopK) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TopK);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Model other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.BaseModelId.Length != 0) {
        BaseModelId = other.BaseModelId;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.InputTokenLimit != 0) {
        InputTokenLimit = other.InputTokenLimit;
      }
      if (other.OutputTokenLimit != 0) {
        OutputTokenLimit = other.OutputTokenLimit;
      }
      supportedGenerationMethods_.Add(other.supportedGenerationMethods_);
      if (other.HasTemperature) {
        Temperature = other.Temperature;
      }
      if (other.HasTopP) {
        TopP = other.TopP;
      }
      if (other.HasTopK) {
        TopK = other.TopK;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            BaseModelId = input.ReadString();
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            InputTokenLimit = input.ReadInt32();
            break;
          }
          case 56: {
            OutputTokenLimit = input.ReadInt32();
            break;
          }
          case 66: {
            supportedGenerationMethods_.AddEntriesFrom(input, _repeated_supportedGenerationMethods_codec);
            break;
          }
          case 77: {
            Temperature = input.ReadFloat();
            break;
          }
          case 85: {
            TopP = input.ReadFloat();
            break;
          }
          case 88: {
            TopK = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            BaseModelId = input.ReadString();
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            InputTokenLimit = input.ReadInt32();
            break;
          }
          case 56: {
            OutputTokenLimit = input.ReadInt32();
            break;
          }
          case 66: {
            supportedGenerationMethods_.AddEntriesFrom(ref input, _repeated_supportedGenerationMethods_codec);
            break;
          }
          case 77: {
            Temperature = input.ReadFloat();
            break;
          }
          case 85: {
            TopP = input.ReadFloat();
            break;
          }
          case 88: {
            TopK = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
